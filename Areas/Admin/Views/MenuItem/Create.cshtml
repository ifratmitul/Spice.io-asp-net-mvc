@model Spice.Models.ViewModels.MenuItemViewModel
@using Spice.Extensions

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2 class="text-info">Create Menu Item</h2>
<br />
<form method="post" enctype="multipart/form-data">
    <div class="border background-white">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Name" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input asp-for="MenuItem.Name" class="form-control" />
            </div>
            <span asp-validation-for="MenuItem.Name" class="text-danger"></span>
        </div>
        <div class="form-group row p-2">
            <div class="col-2">
                <label asp-for="MenuItem.Description" class="col-form-label"></label>
            </div>
            <div class="col-5">
                @Html.TextAreaFor(m => m.MenuItem.Description)
            </div>
            <span asp-validation-for="MenuItem.Description" class="text-danger"></span>
        </div>
        <div class="form-group row p-2">
            <div class="col-2">
                <label asp-for="MenuItem.Price" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input asp-for="MenuItem.Price" class="form-control" />
            </div>
            <span asp-validation-for="MenuItem.Price" class="text-danger"></span>
        </div>
        <div class="form-group row p-2">
            <div class="col-2">
                <label asp-for="MenuItem.Image" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input class="form-control" type="file" name="files" />
            </div>
        </div>
        <div class="form-group row p-2">
            <div class="col-2">
                <label asp-for="MenuItem.CategoryId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="@Model.MenuItem.CategoryId"
                        id="CategoryId"
                        asp-items="Model.Categories.ToSelectListItem(Model.MenuItem.CategoryId)"
                        class="form-control"></select>
            </div>
        </div>
        <div class="form-group row p-2">
            <div class="col-2">
                <label asp-for="MenuItem.SubCategoryId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="@Model.MenuItem.SubCategoryId"
                        id="SubCategoryId"
                        name="SubCategoryId"
                        asp-items="@(new SelectList (string.Empty, "Id", "Name"))"
                        class="form-control"></select>
            </div>
        </div>

        <div class="form-group row p-2">
            <div class="col-2">
                <label asp-for="MenuItem.Spicyness" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="MenuItem.Spicyness"
                        asp-items="Html.GetEnumSelectList<MenuItem.ESpicy>()"
                        class="form-control"></select>
            </div>
        </div>

        <div class="form-group row p-2">
            <div class="col-5 offset-2">
                <partial name="_CreateAndBackButton" />
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'a11ychecker advcode casechange export formatpainter image editimage linkchecker autolink lists checklist media mediaembed pageembed permanentpen powerpaste table advtable tableofcontents tinycomments tinymcespellchecker',
            toolbar: 'a11ycheck addcomment showcomments casechange checklist code export formatpainter image editimage pageembed permanentpen table tableofcontents',
            toolbar_mode: 'floating',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
        });
    </script>

    <script type="text/javascript">

        let categorySelected = document.querySelector("#CategoryId");
        let subCategorySelected = document.querySelector("#SubCategoryId");

        function getSubCategory() {
            fetch('/Admin/SubCategory/GetSubCategory/' + categorySelected.value)
                .then(function(response) {
                    // The API call was successful!
                    return response.json();
                }).then(function(data) {
                    // This is the JSON from our response
                    subCategorySelected.textContent = '';
                    for (i in data) {
                        let optionSubCat = document.createElement('option');
                        optionSubCat.value = data[i].value;
                        optionSubCat.textContent = data[i].text;

                        subCategorySelected.appendChild(optionSubCat);
                    }

                }).catch(function(err) {
                    // if There was an error
                    console.warn('oops Something went wrong.', err);
                });
        }


        window.addEventListener('load', getSubCategory);
        categorySelected.addEventListener('change', getSubCategory);
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }